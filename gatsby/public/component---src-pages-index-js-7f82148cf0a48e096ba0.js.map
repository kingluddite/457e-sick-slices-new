{"version":3,"sources":["webpack:///./src/styles/Grids.js","webpack:///./src/components/LoadingGrid.js","webpack:///./src/utils/useLatestData.js","webpack:///./src/styles/ItemGrid.js","webpack:///./src/pages/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"names":["HomePageGrid","styled","div","ItemsGrid","ItemStyles","LoadingGrid","count","Array","from","length","_","i","key","className","src","alt","width","height","gql","String","raw","deets","ItemGrid","items","console","log","map","item","name","image","asset","url","style","background","metadata","lqip","backgroundSize","CurrentlySlicing","slicemasters","HotSlices","hotSlices","HomePage","useState","setHotSlices","setSlicemasters","useEffect","strings","fetch","process","method","headers","body","JSON","stringify","query","slice","then","res","json","data","StoreSettings","slicemaster","err","useLatestData"],"mappings":"iLAEaA,EAAeC,IAAOC,IAAV,0EAAGD,CAAH,6EAMZE,EAAYF,IAAOC,IAAV,uEAAGD,CAAH,0DAOTG,EAAaH,IAAOC,IAAV,wEAAGD,CAAH,wdCXR,SAASI,EAAT,GAAiC,IAAVC,EAAS,EAATA,MACpC,OACE,kBAACH,EAAD,KACGI,MAAMC,KAAK,CAAEC,OAAQH,IAAS,SAACI,EAAGC,GAAJ,OAC7B,kBAACP,EAAD,CAAYQ,IAAKD,GACf,2BACE,0BAAME,UAAU,QAAhB,eAEF,yBACEC,IAAI,0HACJD,UAAU,UACVE,IAAI,UACJC,MAAM,MACNC,OAAO,aCfnB,IAAMC,EAAMC,OAAOC,IAEbC,EAAK,gICAI,SAASC,EAAT,GAA8B,IAAVC,EAAS,EAATA,MAEjC,OADAC,QAAQC,IAAIF,GAEV,kBAACpB,EAAD,KACGoB,EAAMG,KAAI,SAACC,GAAD,OACT,kBAACvB,EAAD,KACE,2BACE,0BAAMS,UAAU,QAAQc,EAAKC,OAE/B,yBACEZ,MAAM,MACNC,OAAQ,IACRH,IAAQa,EAAKE,MAAMC,MAAMC,IAAtB,wBACHhB,IAAKY,EAAKC,KACVI,MAAO,CACLC,WAAW,OAAQN,EAAKE,MAAMC,MAAMI,SAASC,KAAnC,IACVC,eAAgB,gBCb9B,SAASC,EAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aAC1B,OACE,6BACE,wBAAIzB,UAAU,UACZ,0BAAMA,UAAU,aAAhB,uBAEF,mEACEyB,GAAgB,kBAACjC,EAAD,CAAaC,MAAO,IACrCgC,KAAiBA,WAAc7B,SAAU,2DACzC6B,aAAA,EAAAA,EAAc7B,SAAU,kBAACa,EAAD,CAAUC,MAAOe,KAShD,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UACnB,OACE,6BACE,wBAAI3B,UAAU,UACZ,0BAAMA,UAAU,aAAhB,eAEF,0DACE2B,GAAa,kBAACnC,EAAD,CAAaC,MAAO,IAClCkC,KAAcA,WAAW/B,SAAU,mDACnC+B,aAAA,EAAAA,EAAW/B,SAAU,kBAACa,EAAD,CAAUC,MAAOiB,KAS9B,SAASC,IACtB,MF5Ba,WAEb,MAAkCC,qBAA3BF,EAAP,KAAkBG,EAAlB,KAEA,EAAwCD,qBAAjCJ,EAAP,KAAqBM,EAArB,KAuCA,OArCAC,qBAAU,WGtBG,IAAqCC,EAAS1B,EHuBzDI,QAAQC,IAAI,iBAEZsB,MAAMC,+DAA4C,CAChDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOpC,EAAF,IG/BuC4B,EH+BvC,mQG9BN1B,IACHA,EAAM0B,EAAQS,MAAM,IAGtBT,EAAQ1B,IAAMA,EH0BH,EGzBJ0B,GH8BSzB,EAGAA,OAOXmC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAGLd,EAAac,EAAIE,KAAKC,cAAcpB,WACpCI,EAAgBa,EAAIE,KAAKC,cAAcC,gBA1B3C,OA4BS,SAACC,GACNtC,QAAQC,IAAI,WACZD,QAAQC,IAAIqC,QAEf,IAEI,CACLtB,YACAF,gBEjBkCyB,GAA5BzB,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,UAEtB,OACE,yBAAK3B,UAAU,UACb,wDACA,0DACA,kBAACb,EAAD,KACE,kBAACqC,EAAD,CAAkBC,aAAcA,IAChC,kBAACC,EAAD,CAAWC,UAAWA","file":"component---src-pages-index-js-7f82148cf0a48e096ba0.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HomePageGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(auto, 1fr));\n  gap: 2rem;\n`;\n\nexport const ItemsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n`;\n\n/* Single Grid Item (for home page) */\nexport const ItemStyles = styled.div`\n  @keyframes shine {\n    from {\n      background-position: 200%;\n    }\n\n    to {\n      background-position: -40px;\n    }\n  }\n\n  position: relative;\n  text-align: center;\n\n  img {\n    height: auto;\n    font-size: 0;\n  }\n\n  p {\n    position: absolute;\n    left: 0;\n    width: 100%;\n    transform: rotate(-2deg) translateY(-140%);\n  }\n\n  .mark {\n    display: inline;\n  }\n\n  img.loading {\n    --shine: var(--white);\n    --background: var(--grey);\n    background-image: linear-gradient(90deg, var(--background) 0px, var(--shine) 40px, var(--background) 80px);\n    background-size: 500px;\n    animation: shine 1s infinite linear;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ItemsGrid, ItemStyles } from '../styles/Grids';\n\nexport default function LoadingGrid({ count }) {\n  return (\n    <ItemsGrid>\n      {Array.from({ length: count }, (_, i) => (\n        <ItemStyles key={i}>\n          <p>\n            <span className=\"mark\">Loading...</span>\n          </p>\n          <img\n            src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUAAAAECAQAAADsOj3LAAAADklEQVR42mNkgANGQkwAAJoABWH6GPAAAAAASUVORK5CYII=\"\n            className=\"loading\"\n            alt=\"Loading\"\n            width=\"500\"\n            height=\"400\"\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGrid>\n  );\n}\n\nLoadingGrid.propTypes = {\n  count: PropTypes.number,\n};\n","import { useEffect, useState } from 'react';\n\nconst gql = String.raw;\n\nconst deets = `\n    name\n    _id\n    image {\n      asset {\n        url\n        metadata {\n          lqip\n        }\n      }\n    }\n`;\nexport default function useLatestData() {\n  // hot slices\n  const [hotSlices, setHotSlices] = useState();\n  // slicemaster\n  const [slicemasters, setSlicemasters] = useState();\n  // fetch the data from the GraphQL endpoint\n  useEffect(function () {\n    console.log('FETCHING DATA');\n    // when the component loads (aka mounts), fetch the data\n    fetch(process.env.GATSBY_SANITY_GRAPHQL_ENDPOINT, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: gql`\n          query {\n            StoreSettings(id: \"downtown\") {\n              name\n              slicemaster {\n                ${deets}\n              }\n              hotSlices {\n                ${deets}\n              }\n            }\n          }\n        `,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // TODO: check for errors\n        // console.log(res.data);\n        setHotSlices(res.data.StoreSettings.hotSlices);\n        setSlicemasters(res.data.StoreSettings.slicemaster);\n      })\n      .catch((err) => {\n        console.log('Wooops!');\n        console.log(err);\n      });\n  }, []);\n\n  return {\n    hotSlices,\n    slicemasters,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ItemsGrid, ItemStyles } from './Grids';\n\nexport default function ItemGrid({ items }) {\n  console.log(items);\n  return (\n    <ItemsGrid>\n      {items.map((item) => (\n        <ItemStyles>\n          <p>\n            <span className=\"mark\">{item.name}</span>\n          </p>\n          <img\n            width=\"500\"\n            height={400}\n            src={`${item.image.asset.url}?w=500&h=400&fit=crop`}\n            alt={item.name}\n            style={{\n              background: `url(${item.image.asset.metadata.lqip})`,\n              backgroundSize: 'cover',\n            }}\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGrid>\n  );\n}\n\nItemGrid.propTypes = {\n  items: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LoadingGrid from '../components/LoadingGrid';\nimport { HomePageGrid } from '../styles/Grids';\nimport useLatestData from '../utils/useLatestData';\nimport ItemGrid from '../styles/ItemGrid';\n\nfunction CurrentlySlicing({ slicemasters }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Slicemasters Yo!!!</span>\n      </h2>\n      <p>Standing by, ready to slice you up!</p>\n      {!slicemasters && <LoadingGrid count={4} />}\n      {slicemasters && !slicemasters?.length && <p>No one is working right now</p>}\n      {slicemasters?.length && <ItemGrid items={slicemasters} />}\n    </div>\n  );\n}\n\nCurrentlySlicing.propTypes = {\n  slicemasters: PropTypes.array,\n};\n\nfunction HotSlices({ hotSlices }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Hot Slices</span>\n      </h2>\n      <p>Come on by, buy the slice!</p>\n      {!hotSlices && <LoadingGrid count={4} />}\n      {hotSlices && !hotSlices?.length && <p>Nothing in the case</p>}\n      {hotSlices?.length && <ItemGrid items={hotSlices} />}\n    </div>\n  );\n}\n\nHotSlices.propTypes = {\n  hotSlices: PropTypes.array,\n};\n\nexport default function HomePage() {\n  const { slicemasters, hotSlices } = useLatestData();\n\n  return (\n    <div className=\"center\">\n      <h1>The best pizza downdown!</h1>\n      <p>Open 11am to 11pm every day</p>\n      <HomePageGrid>\n        <CurrentlySlicing slicemasters={slicemasters} />\n        <HotSlices hotSlices={hotSlices} />\n      </HomePageGrid>\n    </div>\n  );\n}\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"sourceRoot":""}