{"version":3,"sources":["webpack:///./src/pages/beers.js"],"names":["BeerGridStyles","styled","div","SingleBeerStyles","BeersPage","beers","data","console","log","title","nodes","length","className","map","beer","rating","Math","round","average","key","id","name","src","image","alt","price","repeat","style","filter","reviews"],"mappings":"2FACA,gGAKMA,EAAiBC,IAAOC,IAAV,4EAAGD,CAAH,qFAMdE,EAAmBF,IAAOC,IAAV,8EAAGD,CAAH,iKAkBP,SAASG,EAAT,GAAyC,IAAZC,EAAW,EAAnBC,KAAQD,MAE1C,OADAE,QAAQC,IAAIH,GAEV,oCACE,kBAAC,IAAD,CAAKI,MAAK,kBAAoBJ,EAAMK,MAAMC,OAAhC,cACV,wBAAIC,UAAU,UAAd,WAAgCP,EAAMK,MAAMC,OAA5C,mCACA,kBAACX,EAAD,KACGK,EAAMK,MAAMG,KAAI,SAACC,GAEhB,IAAMC,EAASC,KAAKC,MAAMH,EAAKC,OAAOG,SAEtC,OACE,kBAACf,EAAD,CAAkBgB,IAAKL,EAAKM,IAC1B,4BAAKN,EAAKO,MACV,yBAAKC,IAAKR,EAAKS,MAAOC,IAAKV,EAAKO,OAC/BP,EAAKW,MACN,uBAAGhB,MAAUM,EAAL,mBACL,KAAKW,OAAOX,GACb,0BAAMY,MAAO,CAAEC,OAAO,oBAAuB,KAAKF,OAAO,EAAIX,IAC7D,mCAASD,EAAKC,OAAOc,QAArB","file":"component---src-pages-beers-js-7a036d129bf1a95eb010.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport SEO from '../components/SEO';\n\nconst BeerGridStyles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 2rem;\n`;\n\nconst SingleBeerStyles = styled.div`\n  padding: 2rem;\n  border: 1px solid var(--grey);\n  text-align: center;\n\n  img {\n    display: grid;\n    align-items: center;\n\n    /* object-fit: cover; /* zoom up and crop image */\n    object-fit: contain; /* regardless of the width and height of image it will always fit image inside */\n    width: 100%;\n    height: 200px;\n\n    font-size: 10px;\n  }\n`;\n\nexport default function BeersPage({ data: { beers } }) {\n  console.log(beers);\n  return (\n    <>\n      <SEO title={`Beers! We have ${beers.nodes.length} in stock`} />\n      <h2 className=\"center\">We have {beers.nodes.length} beers available. Dine in only!</h2>\n      <BeerGridStyles>\n        {beers.nodes.map((beer) => {\n          // console.log(beer);\n          const rating = Math.round(beer.rating.average);\n\n          return (\n            <SingleBeerStyles key={beer.id}>\n              <h3>{beer.name}</h3>\n              <img src={beer.image} alt={beer.name} />\n              {beer.price}\n              <p title={`${rating} out of 5 stars`}>\n                {'⭐️'.repeat(rating)}\n                <span style={{ filter: `grayscale(100%)` }}>{'⭐️'.repeat(5 - rating)}</span>\n                <span> ({beer.rating.reviews})</span>\n              </p>\n            </SingleBeerStyles>\n          );\n        })}\n      </BeerGridStyles>\n    </>\n  );\n}\n\nBeersPage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport const query = graphql`\n  query {\n    beers: allBeer {\n      nodes {\n        image\n        price\n        rating {\n          average\n          reviews\n        }\n        name\n        id\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}