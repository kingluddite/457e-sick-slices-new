{"version":3,"sources":["webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./src/styles/MenuItemStyles.js","webpack:///./src/utils/formatMoney.js","webpack:///./src/utils/calculatePizzaPrice.js","webpack:///./src/components/PizzaOrder.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/utils/attachNamesAndPrices.js","webpack:///./src/utils/calculateOrderTotal.js","webpack:///./src/styles/OrderStyles.js","webpack:///./src/pages/orders.js","webpack:///./src/utils/useForm.js","webpack:///./src/utils/usePizza.js"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","MenuItemStyles","styled","div","formatter","Intl","NumberFormat","style","currency","formatMoney","cents","format","sizes","S","M","L","calculatePizzaPrice","size","PizzaOrder","order","pizzas","removeFromOrder","map","singleOrder","index","pizzaObj","find","pizza","id","fluid","image","asset","price","className","title","onClick","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","attachNamesAndPrices","item","singlePizza","thumbnail","src","calculateOrderTotzal","reduce","runningTotal","OrderStyles","form","OrdersPage","data","nodes","defaults","useState","setValues","updateValues","event","target","parseInt","useForm","email","blackhole","useContext","OrderContext","setOrder","setError","loading","setLoading","message","setMessage","a","preventDefault","console","log","body","total","calculateOrderTotal","fetch","process","headers","JSON","stringify","res","text","parse","status","addToOrder","orderedPizza","submitOrder","usePizza","SEO","onSubmit","e","disabled","htmlFor","onChange","width","height","alt"],"mappings":"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","file":"component---src-pages-orders-js-0922ee9c838c81cc8cce.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","import styled from 'styled-components';\n\nconst MenuItemStyles = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  grid-template-columns: 100px 1fr;\n  gap: 0 1.3rem;\n  align-content: center;\n  align-items: center;\n\n  .gatsby-image-wrapper {\n    grid-row: span 2;\n    height: 100%;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  button {\n    font-size: 1.5rem;\n  }\n\n  /* when there is a button that comes next to a button */\n\n  button + button {\n    margin-left: 1rem;\n  }\n\n  .remove {\n    position: absolute;\n    top: 0;\n    right: 0;\n    background: none;\n    color: var(--red);\n    box-shadow: none;\n    font-size: 3rem;\n    line-height: 1rem;\n  }\n`;\n\nexport default MenuItemStyles;\n","const formatter = Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nexport default function formatMoney(cents) {\n  return formatter.format(cents / 100);\n}\n","const sizes = {\n  S: 0.75,\n  M: 1,\n  L: 1.25,\n};\n\nexport default function calculatePizzaPrice(cents, size) {\n  return cents * sizes[size];\n}\n","import React from 'react';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport MenuItemStyles from '../styles/MenuItemStyles';\nimport formatMoney from '../utils/formatMoney';\nimport calculatePizzaPrice from '../utils/calculatePizzaPrice';\n\nexport default function PizzaOrder({ order, pizzas, removeFromOrder }) {\n  return (\n    <>\n      {order.map((singleOrder, index) => {\n        const pizzaObj = pizzas.find((pizza) => pizza.id === singleOrder.id);\n        return (\n          <MenuItemStyles key={index}>\n            <Img fluid={pizzaObj.image.asset.fluid} />\n            <h2>{pizzaObj.name}</h2>\n            <p>\n              {formatMoney(calculatePizzaPrice(pizzaObj.price, singleOrder.size))}\n              <button\n                type=\"button\"\n                className=\"remove\"\n                title={`Remove ${singleOrder.size} ${pizzaObj.name} from Order`}\n                onClick={() => removeFromOrder(index)}\n              >\n                &times;\n              </button>\n            </p>\n          </MenuItemStyles>\n        );\n      })}\n    </>\n  );\n}\n\nPizzaOrder.propTypes = {\n  order: PropTypes.array,\n  pizzas: PropTypes.array,\n  removeFromOrder: PropTypes.func,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import calculatePizzaPrice from './calculatePizzaPrice';\nimport formatMoney from './formatMoney';\n\nexport default function attachNamesAndPrices(order, pizzas) {\n  return order.map((item) => {\n    const pizza = pizzas.find((singlePizza) => singlePizza.id === item.id);\n    return {\n      ...item,\n      name: pizza.name,\n      thumbnail: pizza.image.asset.fluid.src,\n      price: formatMoney(calculatePizzaPrice(pizza.price, item.size)),\n    };\n  });\n}\n","import calculatePizzaPrice from './calculatePizzaPrice';\n\nexport default function calculateOrderTotzal(order, pizzas) {\n  // 1. Loop over every single item in the order\n  return order.reduce((runningTotal, singleOrder) => {\n    const pizza = pizzas.find((singlePizza) => singlePizza.id === singleOrder.id);\n    // 2. Calculate the total for that pizza\n    // 3. Add that total to the running total\n    return runningTotal + calculatePizzaPrice(pizza.price, singleOrder.size);\n  }, 0);\n}\n","import styled from 'styled-components';\n\nconst OrderStyles = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n\n  fieldset {\n    display: grid;\n    grid-column: span 2;\n    gap: 1rem;\n    align-content: start;\n    overflow: auto;\n    max-height: 600px;\n\n    &.menu,\n    &.order {\n      grid-column: span 1;\n    }\n\n    /* &menu (max-width: 900px) {\n    fieldset.menu,\n    fieldset.order {\n      grid-column: span 2;\n    }\n  } */\n  }\n\n  .blackhole {\n    display: none;\n  }\n`;\n\nexport default OrderStyles;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport SEO from '../components/SEO';\nimport PizzaOrder from '../components/PizzaOrder';\nimport useForm from '../utils/useForm';\nimport calculatePizzaPrice from '../utils/calculatePizzaPrice';\nimport usePizza from '../utils/usePizza';\nimport formatMoney from '../utils/formatMoney';\nimport OrderStyles from '../styles/OrderStyles';\nimport MenuItemStyles from '../styles/MenuItemStyles';\nimport calculateOrderTotal from '../utils/calculateOrderTotal';\n\nexport default function OrdersPage({ data }) {\n  const pizzas = data.pizzas.nodes;\n  // console.log(data);\n  // You have to explicitly set the default values\n  //  for whatever inputs you have\n\n  // CUSTOM HOOKS\n  const { values, updateValues } = useForm({\n    name: '',\n    email: '',\n    blackhole: '',\n  });\n  const { order, addToOrder, removeFromOrder, error, loading, message, submitOrder } = usePizza({\n    pizzas,\n    values,\n  });\n  // END CUSTOM HOOKS\n\n  // console.log(values, updateValues);\n\n  if (message) {\n    return <p>{message}</p>;\n  }\n\n  return (\n    <>\n      <SEO />\n      <OrderStyles onSubmit={(e) => submitOrder(e)}>\n        <fieldset disabled={loading}>\n          <legend>Your Info</legend>\n          <label htmlFor=\"name\">Name</label>\n          <input type=\"text\" name=\"name\" value={values.name} id=\"name\" onChange={updateValues} />\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" name=\"email\" id=\"email\" value={values.email} onChange={updateValues} />\n          <input\n            className=\"blackhole\"\n            type=\"blackhole\"\n            name=\"blackhole\"\n            id=\"blackhole\"\n            value={values.blackhole}\n            onChange={updateValues}\n          />\n        </fieldset>\n        <fieldset className=\"menu\" disabled={loading}>\n          <legend>Menu</legend>\n          {pizzas.map((pizza) => (\n            <MenuItemStyles key={pizza.id}>\n              <Img width=\"50\" height=\"50\" fluid={pizza.image.asset.fluid} alt={pizza.name} />\n              <div>\n                <h2>{pizza.name}</h2>\n              </div>\n              <div>\n                {['S', 'M', 'L'].map((size, index) => (\n                  <button\n                    key={index}\n                    type=\"button\"\n                    onClick={() =>\n                      addToOrder({\n                        id: pizza.id,\n                        size,\n                      })\n                    }\n                  >\n                    {size} {formatMoney(calculatePizzaPrice(pizza.price, size))}\n                  </button>\n                ))}\n              </div>\n            </MenuItemStyles>\n          ))}\n        </fieldset>\n        <fieldset className=\"order\" disabled={loading}>\n          <legend>Order</legend>\n          <PizzaOrder order={order} removeFromOrder={removeFromOrder} pizzas={pizzas} />\n        </fieldset>\n        <fieldset disabled={loading}>\n          <h3>Your Total is {formatMoney(calculateOrderTotal(order, pizzas))}</h3>\n          <div>{error ? <p>Error: {error}</p> : ''}</div>\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Placing Order...' : 'Order Ahead'}\n          </button>\n        </fieldset>\n      </OrderStyles>\n    </>\n  );\n}\n\nOrdersPage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport const query = graphql`\n  query {\n    pizzas: allSanityPizza {\n      nodes {\n        name\n        id\n        slug {\n          current\n        }\n        price\n        image {\n          asset {\n            fluid(maxWidth: 100) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { useState } from 'react';\n\nexport default function useForm(defaults) {\n  const [values, setValues] = useState(defaults);\n\n  function updateValues(event) {\n    let { value, type, name } = event.target;\n    // check if its a number\n    if (type === 'number') {\n      // convert it to a number to prevent coercian to string\n      value = parseInt(value);\n    }\n    setValues({\n      // copy the existing values into it\n      ...values,\n      // update the new value that changed\n      [name]: value,\n    });\n  }\n\n  return { values, updateValues };\n}\n","import { useContext, useState } from 'react';\nimport OrderContext from '../components/OrderContext';\nimport attachNamesAndPrices from './attachNamesAndPrices';\nimport calculateOrderTotal from './calculateOrderTotal';\nimport formatMoney from './formatMoney';\n\nexport default function usePizza({ pizzas, values }) {\n  // 1. Create some state to hold our order\n  // We moved the line below (useState) up to the Provider\n  // const [order, setOrder] = useState([]);\n  // Now we access both our state and our updater function\n  //  (setOrder) via context\n  const [order, setOrder] = useContext(OrderContext);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // 2. Make a function to add things to order\n  function addToOrder(orderedPizza) {\n    setOrder([...order, orderedPizza]);\n  }\n  // 3. Make a function remove things forom order\n  function removeFromOrder(index) {\n    setOrder([\n      // everything before the item we want to remove\n      ...order.slice(0, index),\n      // everything after the item we want to remove\n      ...order.slice(index + 1),\n    ]);\n  }\n\n  // this is the function that is run when user submits the form\n  async function submitOrder(event) {\n    event.preventDefault();\n    console.log(event);\n    setLoading(true);\n    setError(null);\n    // setMessage('Go eat');\n\n    // gather all the data\n    const body = {\n      order: attachNamesAndPrices(order, pizzas),\n      total: formatMoney(calculateOrderTotal(order, pizzas)),\n      name: values.name,\n      email: values.email,\n      blackhole: values.blackhole,\n    };\n    // console.log(body);\n\n    // 4. Send this data the a a serverless function when they check out\n    // GATSBY_SERVERLESS_BASE;\n    const res = await fetch(`${process.env.GATSBY_SERVERLESS_BASE}/placeOrder`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n\n    const text = JSON.parse(await res.text());\n    // check if everything worked\n    if (res.status >= 400 && res.status < 600) {\n      setLoading(false); // turn off loading\n      setError(text.message);\n      console.log(text.message);\n    } else {\n      // it worked!\n      setLoading(false);\n      setMessage('Success! Come on down for your pizza');\n    }\n  }\n\n  return {\n    order,\n    addToOrder,\n    removeFromOrder,\n    error,\n    loading,\n    message,\n    submitOrder,\n  };\n}\n"],"sourceRoot":""}